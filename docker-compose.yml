services:
  master:
    build:
      context: .
      dockerfile: Dockerfile
    image: goload:latest
    command: ["./goload", "worker", "--mode", "master"]
    ports:
      - "8080:8080"
      - "9090:9090"
    environment:
      - GO_ENV=development
      - LOG_LEVEL=debug
    volumes:
      - ./config:/app/config
    networks:
      - goload-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: goload:latest
    entrypoint: ["/app/worker-entrypoint.sh"]
    environment:
      - GO_ENV=development
      - LOG_LEVEL=debug
    volumes:
      - ./config:/app/config
    depends_on:
      - master
    deploy:
      replicas: 2
    networks:
      - goload-network

  runner:
    build:
      context: .
      dockerfile: Dockerfile
    image: goload:latest
    command: ["/bin/sh", "-c", "sleep 10 && ./goload start --target http://example.com --protocol http --duration 1h --vusers 10"]
    environment:
      - GO_ENV=development
      - LOG_LEVEL=debug
    depends_on:
      - master
      - worker
    networks:
      - goload-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus:/etc/prometheus:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9091:9090"
    networks:
      - goload-network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana/dashboards:/etc/grafana/dashboards:ro
      - ./config/grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PATHS_CONFIG=/etc/grafana/provisioning/grafana.ini
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - goload-network

networks:
  goload-network:

volumes:
  prometheus_data:
  grafana_data: