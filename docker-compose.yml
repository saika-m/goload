version: '3.8'

services:
  master:
    build:
      context: .
      dockerfile: Dockerfile
    image: goload:latest
    command: ["./master"]
    ports:
      - "8080:8080"  # API port
      - "9090:9090"  # Metrics port
    environment:
      - GO_ENV=development
      - LOG_LEVEL=debug
    volumes:
      - ./config:/app/config
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - goload-network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: goload:latest
    command: ["./worker", "--master", "master:8080"]
    environment:
      - GO_ENV=development
      - LOG_LEVEL=debug
      - MASTER_ADDR=master:8080
    depends_on:
      - master
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9091/health"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - goload-network

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9091:9090"
    networks:
      - goload-network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - goload-network

volumes:
  prometheus_data:
  grafana_data:

networks:
  goload-network:
    driver: bridge